server:
  port: 8090

spring:
  application:
    name: eureka
# 通过
# eureka.client.registerWithEureka：false
# fetchRegistry：false
# 来表明自己是一个eureka server
eureka:
  instance:
    hostname: spring-cloud.victoriest.me
#    prefer-ip-address: true
  client:
    # 由于该应用为注册中心，所以设置为false，代表不向注册中心注册自己
    registerWithEureka: false
    # 由于注册中心的职责就是维护服务实例，他并不需要去检索服务，所以也设置为false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
    server:
      # 自我保护模式是一种应对网络异常的安全保护措施。
      # 它的架构哲学是宁可同时保留所有微服务（健康的微服务和不健康的微服务都会保留），
      # 也不盲目注销任何健康的微服务。使用自我保护模式，可以让Eureka集群更加的健壮、稳定。
      enable-self-preservation: false

# 安全认证的配置
security:
  basic:
    enabled: false
  user:
    name: victoriest
    password: estest